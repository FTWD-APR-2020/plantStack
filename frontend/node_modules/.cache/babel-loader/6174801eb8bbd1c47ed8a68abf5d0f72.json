{"ast":null,"code":"var _jsxFileName = \"/Users/niko/Documents/Code/IHMAR2020/fullStack/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      message: 'no message yet',\n      newPlantId: 'no plant id yet',\n      plants: []\n    };\n\n    this.sendMessageToServer = async () => {\n      let res = await Axios.post('http://localhost:5000/plants', {\n        name: 'tulip',\n        color: 'purple',\n        amount: 400000000\n      }); //Post flower to the server 5\n\n      console.log(res); //show the message 8 \n\n      this.setState({\n        //9 \n        message: res.data.message,\n        newPlantId: res.data.newPlantId\n      });\n    };\n\n    this.showDaPlants = () => {\n      return this.state.plants.map(eachPlant => {\n        /*#__PURE__*/\n        React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }\n        }, eachPlant.name, \" | \", eachPlant.color, \" | \", eachPlant.amount, \" \");\n      });\n    };\n  }\n\n  async componentDidMount() {\n    let res = await Axios.get('http://localhost:5000'); //Go get penguin from server 1 \n\n    let plants = await Axios.get('http://localhost:5000/plants');\n    this.setState({\n      name: res.data.name,\n      plants: plants\n    }); //set penguin to state  2\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, this.state.name, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sendMessageToServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"send to server\"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, this.state.message), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, this.state.newPlantId)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/niko/Documents/Code/IHMAR2020/fullStack/frontend/src/App.js"],"names":["React","Component","Axios","App","state","name","message","newPlantId","plants","sendMessageToServer","res","post","color","amount","console","log","setState","data","showDaPlants","map","eachPlant","componentDidMount","get","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE,gBAFH;AAGNC,MAAAA,UAAU,EAAE,iBAHN;AAINC,MAAAA,MAAM,EAAE;AAJF,KADkB;;AAAA,SAkB1BC,mBAlB0B,GAkBJ,YAAY;AAChC,UAAIC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,8BAAX,EAA2C;AAACN,QAAAA,IAAI,EAAE,OAAP;AAAgBO,QAAAA,KAAK,EAAC,QAAtB;AAAgCC,QAAAA,MAAM,EAAC;AAAvC,OAA3C,CAAhB,CADgC,CAC8E;;AAE9GC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAHgC,CAGf;;AAEjB,WAAKM,QAAL,CAAc;AAAE;AACdV,QAAAA,OAAO,EAACI,GAAG,CAACO,IAAJ,CAASX,OADL;AAEZC,QAAAA,UAAU,EAAEG,GAAG,CAACO,IAAJ,CAASV;AAFT,OAAd;AAID,KA3ByB;;AAAA,SA8B3BW,YA9B2B,GA8BZ,MAAM;AACnB,aAAO,KAAKd,KAAL,CAAWI,MAAX,CAAkBW,GAAlB,CAAsBC,SAAS,IAAI;AACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,SAAS,CAACf,IAAf,SAAwBe,SAAS,CAACR,KAAlC,SAA4CQ,SAAS,CAACP,MAAtD;AACJ,OAFM,CAAP;AAGD,KAlC0B;AAAA;;AAQ1B,QAAMQ,iBAAN,GAA0B;AACxB,QAAIX,GAAG,GAAG,MAAMR,KAAK,CAACoB,GAAN,CAAU,uBAAV,CAAhB,CADwB,CAC2B;;AACnD,QAAId,MAAM,GAAG,MAAMN,KAAK,CAACoB,GAAN,CAAU,8BAAV,CAAnB;AACA,SAAKN,QAAL,CAAc;AACZX,MAAAA,IAAI,EAAEK,GAAG,CAACO,IAAJ,CAASZ,IADH;AAEZG,MAAAA,MAAM,EAAEA;AAFI,KAAd,EAHwB,CAOrB;AACJ;;AAqBDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKnB,KAAL,CAAWC,IAFd,oBAIE;AAAQ,MAAA,OAAO,EAAE,KAAKI,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWE,OAAf,CANF,oBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWG,UAAf,CAPF,CADF,CADF;AAgBD;;AAtDyB;;AAyD5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Axios from 'axios'\n\nclass App extends Component {\n  state = {\n    name: '',\n    message: 'no message yet',\n    newPlantId: 'no plant id yet',\n    plants: []\n  }\n\n  async componentDidMount() {\n    let res = await Axios.get('http://localhost:5000') //Go get penguin from server 1 \n    let plants = await Axios.get('http://localhost:5000/plants')\n    this.setState({\n      name: res.data.name,\n      plants: plants\n    \n    }) //set penguin to state  2\n  }\n\n  sendMessageToServer = async () => {\n    let res = await Axios.post('http://localhost:5000/plants', {name: 'tulip', color:'purple', amount:400000000}) //Post flower to the server 5\n    \n    console.log(res) //show the message 8 \n\n    this.setState({ //9 \n      message:res.data.message,\n      newPlantId: res.data.newPlantId\n    })\n  }\n\n\n showDaPlants = () => {\n   return this.state.plants.map(eachPlant => { \n        <li>{eachPlant.name} | {eachPlant.color} | {eachPlant.amount} </li>    \n   })\n }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          {this.state.name} {/*See Penguin 3*/}\n\n          <button onClick={this.sendMessageToServer}>send to server</button> {/*Called method above 4*/}\n\n          <p>{this.state.message}</p> {/*10*/}\n          <p>{this.state.newPlantId}</p> \n\n\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}