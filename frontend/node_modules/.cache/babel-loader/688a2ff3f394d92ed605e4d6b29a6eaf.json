{"ast":null,"code":"var _jsxFileName = \"/Users/niko/Documents/Code/IHMAR2020/fullStack/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Axios from 'axios';\nimport { Link, Switch, Router } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      color: '',\n      amount: 0,\n      message: 'no message yet',\n      newPlantId: 'no plant id yet',\n      plants: [],\n      newMessage: ''\n    };\n\n    this.sendMessageToServer = async () => {\n      let res = await Axios.post('http://localhost:5000/plants', this.state); //Post flower to the server 5\n\n      console.log(res); //show the message 8 \n\n      let newPlants = [...this.state.plants];\n      newPlants.push({\n        name: this.state.name,\n        color: this.state.color,\n        amount: this.state.amount\n      });\n      this.setState({\n        //9 \n        message: res.data.message,\n        newPlantId: res.data.newPlantId,\n        plants: newPlants,\n        newMessage: 'Hurray we did it!'\n      });\n    };\n\n    this.showDaPlants = () => {\n      return this.state.plants.map(eachPlant => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: eachPlant._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }\n        }, eachPlant.name, \" | \", eachPlant.color, \" | \", eachPlant.amount, \" \");\n      });\n    };\n\n    this.setTyping = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  async componentDidMount() {\n    let res = await Axios.get('http://localhost:5000'); //Go get penguin from server 1 \n\n    let res2 = await Axios.get('http://localhost:5000/plants');\n    this.setState({\n      name: res.data.name,\n      plants: res2.data.plants\n    }); //set penguin to state  2\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.state.name, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      onChange: this.setTyping,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"color\",\n      name: \"color\",\n      onChange: this.setTyping,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"amount\",\n      name: \"amount\",\n      onChange: this.setTyping,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sendMessageToServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"send to server\"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, this.state.message), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, this.state.newPlantId), this.showDaPlants(), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, this.state.newMessage)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/niko/Documents/Code/IHMAR2020/fullStack/frontend/src/App.js"],"names":["React","Component","Axios","Link","Switch","Router","App","state","name","color","amount","message","newPlantId","plants","newMessage","sendMessageToServer","res","post","console","log","newPlants","push","setState","data","showDaPlants","map","eachPlant","_id","setTyping","e","target","value","componentDidMount","get","res2","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Axios from 'axios'\nimport { Link, Switch, Router } from 'react-router-dom'\n\nclass App extends Component {\n  state = {\n    name: '',\n    color: '',\n    amount: 0,\n    message: 'no message yet',\n    newPlantId: 'no plant id yet',\n    plants: [],\n    newMessage: ''\n  }\n\n  async componentDidMount() {\n    let res = await Axios.get('http://localhost:5000') //Go get penguin from server 1 \n    let res2 = await Axios.get('http://localhost:5000/plants')\n    this.setState({\n      name: res.data.name,\n      plants: res2.data.plants\n    \n    }) //set penguin to state  2\n  }\n\n  sendMessageToServer = async () => {\n    let res = await Axios.post('http://localhost:5000/plants', this.state) //Post flower to the server 5\n    \n    console.log(res) //show the message 8 \n    let newPlants = [...this.state.plants]\n    newPlants.push({name:this.state.name, color:this.state.color, amount:this.state.amount})\n\n    this.setState({ //9 \n      message:res.data.message,\n      newPlantId: res.data.newPlantId,\n      plants: newPlants,\n      newMessage: 'Hurray we did it!'\n    })\n  }\n\n\n showDaPlants = () => {\n   return this.state.plants.map(eachPlant => { \n        return <li key={eachPlant._id} >{eachPlant.name} | {eachPlant.color} | {eachPlant.amount} </li>    \n   })\n }\n\n\n setTyping = (e) => {\n   this.setState({\n     [e.target.name] : e.target.value\n   })\n }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n\n\n        {/* <Switch>\n          <Route path={`/movies`} render={(props)=><Movie {...props} />} />\n          <Route path={`/movies/:id`} render={(props)=><Movie {...props} />} />\n          <Route path={`/movies`} render={(props)=><Movie {...props} />} />\n        </Switch> */}\n\n\n          {this.state.name} {/*See Penguin 3*/}\n\n          <input type=\"text\" placeholder=\"name\" name=\"name\" onChange={this.setTyping} />\n          <input type=\"text\" placeholder=\"color\" name=\"color\" onChange={this.setTyping}/>\n          <input type=\"number\" placeholder=\"amount\" name=\"amount\" onChange={this.setTyping}/>\n\n          <button onClick={this.sendMessageToServer}>send to server</button> {/*Called method above 4*/}\n\n\n          <p>{this.state.message}</p> {/*10*/}\n          <p>{this.state.newPlantId}</p> \n\n\n          {this.showDaPlants()}\n          <li>{this.state.newMessage}</li>\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}