{"ast":null,"code":"var _jsxFileName = \"/Users/niko/Documents/Code/IHMAR2020/fullStack/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      color: '',\n      amount: 0,\n      message: 'no message yet',\n      newPlantId: 'no plant id yet',\n      plants: []\n    };\n\n    this.sendMessageToServer = async () => {\n      let res = await Axios.post('http://localhost:5000/plants', this.state); //Post flower to the server 5\n\n      console.log(res); //show the message 8 \n\n      let newPlants = [...this.state.plants];\n      newPlants.push({\n        name: this.state.name,\n        color: this.state.color,\n        amount: this.state.amount\n      });\n      this.setState({\n        //9 \n        message: res.data.message,\n        newPlantId: res.data.newPlantId,\n        plants: newPlants\n      });\n    };\n\n    this.showDaPlants = () => {\n      return this.state.plants.map(eachPlant => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: eachPlant._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }\n        }, eachPlant.name, \" | \", eachPlant.color, \" | \", eachPlant.amount, \" \");\n      });\n    };\n\n    this.setTyping = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  async componentDidMount() {\n    let res = await Axios.get('http://localhost:5000'); //Go get penguin from server 1 \n\n    let res2 = await Axios.get('http://localhost:5000/plants');\n    this.setState({\n      name: res.data.name,\n      plants: res2.data.plants\n    }); //set penguin to state  2\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.state.name, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      onChange: this.setTyping,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"color\",\n      name: \"color\",\n      onChange: this.setTyping,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"amount\",\n      name: \"amount\",\n      onChange: this.setTyping,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sendMessageToServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"send to server\"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, this.state.message), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, this.state.newPlantId), this.showDaPlants()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/niko/Documents/Code/IHMAR2020/fullStack/frontend/src/App.js"],"names":["React","Component","Axios","App","state","name","color","amount","message","newPlantId","plants","sendMessageToServer","res","post","console","log","newPlants","push","setState","data","showDaPlants","map","eachPlant","_id","setTyping","e","target","value","componentDidMount","get","res2","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Axios from 'axios'\n\nclass App extends Component {\n  state = {\n    name: '',\n    color: '',\n    amount: 0,\n    message: 'no message yet',\n    newPlantId: 'no plant id yet',\n    plants: []\n  }\n\n  async componentDidMount() {\n    let res = await Axios.get('http://localhost:5000') //Go get penguin from server 1 \n    let res2 = await Axios.get('http://localhost:5000/plants')\n    this.setState({\n      name: res.data.name,\n      plants: res2.data.plants\n    \n    }) //set penguin to state  2\n  }\n\n  sendMessageToServer = async () => {\n    let res = await Axios.post('http://localhost:5000/plants', this.state) //Post flower to the server 5\n    \n    console.log(res) //show the message 8 \n    let newPlants = [...this.state.plants]\n    newPlants.push({name:this.state.name, color:this.state.color, amount:this.state.amount})\n\n    this.setState({ //9 \n      message:res.data.message,\n      newPlantId: res.data.newPlantId,\n      plants: newPlants\n    })\n  }\n\n\n showDaPlants = () => {\n   return this.state.plants.map(eachPlant => { \n        return <li key={eachPlant._id} >{eachPlant.name} | {eachPlant.color} | {eachPlant.amount} </li>    \n   })\n }\n\n\n setTyping = (e) => {\n   this.setState({\n     [e.target.name] : e.target.value\n   })\n }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          {this.state.name} {/*See Penguin 3*/}\n\n          <input type=\"text\" placeholder=\"name\" name=\"name\" onChange={this.setTyping} />\n          <input type=\"text\" placeholder=\"color\" name=\"color\" onChange={this.setTyping}/>\n          <input type=\"number\" placeholder=\"amount\" name=\"amount\" onChange={this.setTyping}/>\n\n          <button onClick={this.sendMessageToServer}>send to server</button> {/*Called method above 4*/}\n\n\n          <p>{this.state.message}</p> {/*10*/}\n          <p>{this.state.newPlantId}</p> \n\n\n          {this.showDaPlants()}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}